# -*- coding: utf-8 -*-
import requests
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.utils import get_random_id
from collections import defaultdict

# token - для бота; access - для методов?
token = "191e3dc35095061f02e911e3a58c36f6201bebd64d0c55ef483e188676f9d985d5520cb20051913367737"
access_token = "fc0094f6fc0094f6fc0094f62ffc723bb0ffc00fc0094f6a2ec36ebf4e8f3016a58d7d9"

vk = vk_api.VkApi(token=token)

vk._auth_token()

api = vk.get_api()

longpoll = VkBotLongPoll(vk, 196442458)
domain = 'foodsharingbot'
group_id = '-196442458'


# Пользователи
# нужно будет их записывать в файл и считывать в дальнейшем
users = defaultdict(list)

# Пока что только свой айди добавлю
users["peer_id"].append(103961888)
users["links"].append("https://vk.com/sharingfood")
users["links_count"].append(0)


# Вайтлист фудшерингов для вк бы, но там чет очень много пабликов, мб потом; пока юзеры свои любые паблики могут кидать, не больше 5
# fs_white_list = []

# Функция проверки пользователей (были такие уже или нет)
def user_check(peer_id):
    check = 0
    check_links = 0

    # если юзер существует, смотрим есть ли у него ссылки для дальнейшей работы
    for user in users["peer_id"]:
        if user == peer_id:
            check = 1
            if users["links_count"][0] != 0:
                check_links = 1

    # Если нету - добавляем

    if check == 0:
        users["peer_id"].append(peer_id)
    return check_links



# r = requests.get('https://api.vk.com/method/wall.get',
#                   params={
#                       'access_token': access_token,
#                       'owner_id': group_id,
#                       'v': '5.110',
#                       'count': 2,
#                       'offset': 0
#                   })
#
# data = r.json()['response']['items']
# print(data)
# for post in data:
#     print(post['text'])




for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:
        message = event.obj['message']

        peer_id = message['peer_id']
        text = message['text']


        # Смотрим есть ли айди чата с юзером в нашей коллекции; мб каждый раз при новом сообщение такое делать нехорошо..
        # 1 - Существует и у него есть ссылочки на группы; 0 - не очень
        user_links = user_check(peer_id)

        # Работаем дальше, вводить ссылочки пока по одной можно за сообщение
        if user_links == 0:
            api.messages.send(peer_id=peer_id, message="Здравствуйте, пожалуйста, поделителитесь ссылками на ваши любимые фудшеринг группы, чтобы я мог работать. Максимум групп - 5. Пример: https://vk.com/sharingfood", random_id=get_random_id())


        # Добавляем ссылочки, удаление потом добавить над
        if text.lower()[:4] == "http":
            if(users["links_count"][0] <= 5):
                users["links"].append(text.lower())
                users["links_count"][0] = users["links_count"][0] + 1
                api.messages.send(peer_id=peer_id, message="Ваша ссылка успешно добавлена!", random_id=get_random_id())
            else:
                api.messages.send(peer_id=peer_id, message="Ссылочки кончились", random_id=get_random_id())

        if user_links == 1:
            api.messages.send(peer_id=peer_id, message="аыф", random_id=get_random_id())


        if text.lower() == "дай еду":
            api.messages.send(peer_id=peer_id, message="Нету еды", random_id=get_random_id())









